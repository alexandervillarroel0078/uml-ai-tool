BACKEND
cd backend
python -m venv .venv
.venv\Scripts\Activate.ps1



DELETE FROM alembic_version;
Remove-Item .\alembic\versions\* -Recurse -Force
alembic revision --autogenerate -m "init schema"
alembic upgrade head

uvicorn app.main:app --reload --host 0.0.0.0 --port 8000

python .\seeds\load_csv_sa.py //para poblar la BD

http://127.0.0.1:8000/docs

//para crear requerieminetos
pip freeze > requirements.txt
//para instalar
pip install -r requirements.txt

cd C:\xampp\htdocs\uml-ai-tool\exporters\output\generated_project_test
mvn spring-boot:run
 


cd backend
.venv\Scripts\Activate.ps1
uvicorn app.main:app --reload --host 0.0.0.0 --port 8000

cd frontend
npm run dev

cd exporters

POST http://localhost:8000/diagrams/367493a5-e490-4665-a73f-8626674b2ee2/export

# SELECT * FROM "user";
# SELECT * FROM diagram;
# SELECT * FROM clase;
# SELECT * FROM atributo;
# SELECT * FROM metodo;
# SELECT * FROM relacion;
# SELECT * FROM alembic_version;



DROP SCHEMA public CASCADE;

CREATE SCHEMA public;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO public;

DO $$ DECLARE
    r RECORD;
 BEGIN
     -- Desactivar temporalmente restricciones
     EXECUTE 'SET session_replication_role = replica';

     -- Eliminar todas las tablas del esquema p√∫blico
     FOR r IN (SELECT tablename FROM pg_tables WHERE schemaname = 'public') LOOP
         EXECUTE 'DROP TABLE IF EXISTS public.' || quote_ident(r.tablename) || ' CASCADE';
     END LOOP;

     -- Restaurar las restricciones
     EXECUTE 'SET session_replication_role = origin';
 END $$;